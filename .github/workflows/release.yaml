name: Build and release

on:
  push:
    tags: ['v*']

jobs:

  build:
    runs-on: ubuntu-20.04
    permissions:
      contents: write

    steps:
  
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # get all tags, needed to get git log
        ref: main
  
    - name: setup Java
      uses: actions/setup-java@v3
      with:
          java-version: '17'
          distribution: adopt
          cache: gradle
    
    - name: Execute Gradle build
      run: ./gradlew bootJar
  
    - name: get semantic tag version and release notes from commit messages
      id: tag 
      run: |
          curtag=${GITHUB_REF_NAME}
          major_minor=$(echo "$curtag" | cut -d'.' -f1-2)
          patch=$(echo "$curtag" | cut -d'.' -f3)
          # avoid empty patch number
          [ -n "$patch" ] && ((patch--)) || patch=".x"
          prevtag="${major_minor}.${patch}"
          echo "" > body.log
          if git tag | grep $prevtag ; then
            git log -q ${curtag}...${prevtag} --pretty="- %s" -q --no-color >> body.log
          else
            git log --pretty="- %s" -q --no-color >> body.log
          fi
          line_count=$(cat body.log | wc -l)
          echo "curtag=$curtag" >> $GITHUB_OUTPUT
          echo "prevtag=$prevtag" >> $GITHUB_OUTPUT
          echo "line_count=$line_count" >> $GITHUB_OUTPUT  
  
    - uses: ncipollo/release-action@v1
      with:
          name: ${{ env.GITHUB_REF_NAME }}
          tag: ${{ env.GITHUB_REF_NAME }}
          artifacts: "build/libs/springBoot.jar"
          bodyFile: "body.log"
          token: ${{ secrets.ACCESS_TOKEN }
  
